{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":204267,"sourceType":"datasetVersion","datasetId":88705}],"dockerImageVersionId":30822,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import kagglehub\n\n# Download latest version\npath = kagglehub.dataset_download(\"quantbruce/real-estate-price-prediction\")\n\nprint(\"Path to dataset files:\", path)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-14T14:47:08.422726Z","iopub.execute_input":"2025-01-14T14:47:08.422945Z","iopub.status.idle":"2025-01-14T14:47:09.570517Z","shell.execute_reply.started":"2025-01-14T14:47:08.422915Z","shell.execute_reply":"2025-01-14T14:47:09.569426Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt # for data visualization purposes\nimport seaborn as sns # for data visualization\n%matplotlib inline\n\n# Input data files are available in the \"../input/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-14T14:47:09.571644Z","iopub.execute_input":"2025-01-14T14:47:09.571867Z","iopub.status.idle":"2025-01-14T14:47:10.659803Z","shell.execute_reply.started":"2025-01-14T14:47:09.571847Z","shell.execute_reply":"2025-01-14T14:47:10.658838Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"import warnings\n\nwarnings.filterwarnings('ignore')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-14T14:47:10.661455Z","iopub.execute_input":"2025-01-14T14:47:10.662053Z","iopub.status.idle":"2025-01-14T14:47:10.666996Z","shell.execute_reply.started":"2025-01-14T14:47:10.662029Z","shell.execute_reply":"2025-01-14T14:47:10.665107Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"data = '/kaggle/input/real-estate-price-prediction/Real estate.csv'\n\ndf = pd.read_csv(data, header=None)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-14T14:47:10.667950Z","iopub.execute_input":"2025-01-14T14:47:10.668275Z","iopub.status.idle":"2025-01-14T14:47:10.713422Z","shell.execute_reply.started":"2025-01-14T14:47:10.668250Z","shell.execute_reply":"2025-01-14T14:47:10.710846Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# view dimensions of dataset\n\ndf.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-14T14:47:10.714901Z","iopub.execute_input":"2025-01-14T14:47:10.715300Z","iopub.status.idle":"2025-01-14T14:47:10.723891Z","shell.execute_reply.started":"2025-01-14T14:47:10.715261Z","shell.execute_reply":"2025-01-14T14:47:10.721867Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error, r2_score\nfrom sklearn.preprocessing import StandardScaler","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-14T14:47:10.726468Z","iopub.execute_input":"2025-01-14T14:47:10.726831Z","iopub.status.idle":"2025-01-14T14:47:11.065945Z","shell.execute_reply.started":"2025-01-14T14:47:10.726797Z","shell.execute_reply":"2025-01-14T14:47:11.064888Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"data=pd.read_csv(\"/kaggle/input/real-estate-price-prediction/Real estate.csv\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-14T14:47:11.067205Z","iopub.execute_input":"2025-01-14T14:47:11.067470Z","iopub.status.idle":"2025-01-14T14:47:11.078901Z","shell.execute_reply.started":"2025-01-14T14:47:11.067450Z","shell.execute_reply":"2025-01-14T14:47:11.076827Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"data.info()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-14T14:47:11.079746Z","iopub.execute_input":"2025-01-14T14:47:11.080041Z","iopub.status.idle":"2025-01-14T14:47:11.120352Z","shell.execute_reply.started":"2025-01-14T14:47:11.080016Z","shell.execute_reply":"2025-01-14T14:47:11.117051Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"data.describe()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-14T14:47:11.121257Z","iopub.execute_input":"2025-01-14T14:47:11.121553Z","iopub.status.idle":"2025-01-14T14:47:11.156741Z","shell.execute_reply.started":"2025-01-14T14:47:11.121530Z","shell.execute_reply":"2025-01-14T14:47:11.155218Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"data.isnull().sum()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-14T14:47:11.157734Z","iopub.execute_input":"2025-01-14T14:47:11.158027Z","iopub.status.idle":"2025-01-14T14:47:11.164223Z","shell.execute_reply.started":"2025-01-14T14:47:11.157992Z","shell.execute_reply":"2025-01-14T14:47:11.163378Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"data.select_dtypes(include='number').columns.tolist()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-14T14:47:11.164815Z","iopub.execute_input":"2025-01-14T14:47:11.165002Z","iopub.status.idle":"2025-01-14T14:47:11.184959Z","shell.execute_reply.started":"2025-01-14T14:47:11.164984Z","shell.execute_reply":"2025-01-14T14:47:11.183382Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"numercal_colams=data.select_dtypes(include='number').columns.tolist()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-14T14:47:11.186049Z","iopub.execute_input":"2025-01-14T14:47:11.186344Z","iopub.status.idle":"2025-01-14T14:47:11.206560Z","shell.execute_reply.started":"2025-01-14T14:47:11.186317Z","shell.execute_reply":"2025-01-14T14:47:11.205700Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"def cap_outliers(df, column):\n    Q1 = df[column].quantile(0.25)\n    Q3 = df[column].quantile(0.75)\n    IQR = Q3 - Q1\n    lower_bound = Q1 - 1.5 * IQR\n    upper_bound = Q3 + 1.5 * IQR\n    df[column] = df[column].apply(lambda x: upper_bound if x > upper_bound else (lower_bound if x < lower_bound else x))\n\ncolumns_to_cap = [\"X3 distance to the nearest MRT station\",\"X5 latitude\",\"X6 longitude\", \"Y house price of unit area\"]\nfor col in columns_to_cap:\n    cap_outliers(data, col)\n\nplt.figure(figsize=(15, 10))\nfor i, col in enumerate(columns_to_cap, 1):\n    plt.subplot(1, 4, i)\n    data.boxplot(column=col)\n    plt.title(f'Boxplot of {col} after capping outliers')\n\nplt.tight_layout()\nplt.show()\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T09:20:23.734816Z","iopub.execute_input":"2025-01-18T09:20:23.735178Z","iopub.status.idle":"2025-01-18T09:20:23.861342Z","shell.execute_reply.started":"2025-01-18T09:20:23.735113Z","shell.execute_reply":"2025-01-18T09:20:23.859800Z"}},"outputs":[{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-cb4c28c4a6ec>\u001b[0m in \u001b[0;36m<cell line: 10>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0mcolumns_to_cap\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m\"X3 distance to the nearest MRT station\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\"X5 latitude\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\"X6 longitude\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"Y house price of unit area\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mcol\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mcolumns_to_cap\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 11\u001b[0;31m     \u001b[0mcap_outliers\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcol\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     12\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     13\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfigure\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfigsize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m15\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m10\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'data' is not defined"],"ename":"NameError","evalue":"name 'data' is not defined","output_type":"error"}],"execution_count":1},{"cell_type":"code","source":"features = data.drop(columns=[\"No\", \"Y house price of unit area\"])\ntarget=data[\"Y house price of unit area\"]\nscaler=StandardScaler()\nscaled_feature=scaler.fit_transform(features)\nscaled_feature_df=pd.DataFrame(scaled_feature,columns=features.columns)\nscaled_feature_df.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T09:21:28.957752Z","iopub.execute_input":"2025-01-18T09:21:28.958274Z","iopub.status.idle":"2025-01-18T09:21:28.973998Z","shell.execute_reply.started":"2025-01-18T09:21:28.958229Z","shell.execute_reply":"2025-01-18T09:21:28.971901Z"}},"outputs":[{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-2-694e4c1d0754>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mfeatures\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"No\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"Y house price of unit area\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mtarget\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"Y house price of unit area\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mscaler\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mStandardScaler\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mscaled_feature\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mscaler\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit_transform\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfeatures\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mscaled_feature_df\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mDataFrame\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mscaled_feature\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfeatures\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'data' is not defined"],"ename":"NameError","evalue":"name 'data' is not defined","output_type":"error"}],"execution_count":2},{"cell_type":"code","source":"x_train,x_test,y_train,y_test=train_test_split(scaled_feature_df,target,test_size=0.3,shuffle=True,random_state=42)\nmodel=LinearRegression()\nmodel.fit(x_train,y_train)\ny_pred=model.predict(x_test)\nmse=mean_squared_error(y_test,y_pred)\nr2=r2_score(y_test,y_pred)\nprint(\"R2_score    :\" , r2) \nprint(\"mean_squre_error  :\" , mse)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T09:21:36.751899Z","iopub.execute_input":"2025-01-18T09:21:36.752272Z","iopub.status.idle":"2025-01-18T09:21:36.765972Z","shell.execute_reply.started":"2025-01-18T09:21:36.752229Z","shell.execute_reply":"2025-01-18T09:21:36.764163Z"}},"outputs":[{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-3-64c3c9585ca7>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mx_train\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mx_test\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0my_train\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0my_test\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtrain_test_split\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mscaled_feature_df\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mtarget\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mtest_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0.3\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mshuffle\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mrandom_state\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m42\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mLinearRegression\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx_train\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0my_train\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0my_pred\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx_test\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mmse\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mmean_squared_error\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my_test\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0my_pred\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'train_test_split' is not defined"],"ename":"NameError","evalue":"name 'train_test_split' is not defined","output_type":"error"}],"execution_count":3}]}